import sqlalchemy as sa
import sqlmodel
from alembic import op

"""Add moderation models

Revision ID: b94fb227a27b
Revises: 
Create Date: 2025-10-14 20:56:09.759369

"""


# revision identifiers, used by Alembic.
revision = 'b94fb227a27b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('global_users',
    sa.Column('discord_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('joined_discord', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('discord_id')
    )
    op.create_table('servers',
    sa.Column('server_id', sa.BigInteger(), nullable=False),
    sa.Column('server_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('birthday_channel_id', sa.BigInteger(), nullable=True),
    sa.Column('birthday_channel_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('birthday_role_id', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('server_id')
    )
    op.create_table('birthdays',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('day', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('role_added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['global_users.discord_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('congratulations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('bot_message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('server_id', sa.BigInteger(), nullable=False),
    sa.Column('added_by_user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['added_by_user_id'], ['global_users.discord_id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.Uuid(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('request_phrase', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('respond_phrase', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('server_id', sa.BigInteger(), nullable=False),
    sa.Column('added_by_user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('moderation_actions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('action_type', sa.Enum('WARN', 'MUTE', 'BAN', name='actiontype'), nullable=False),
    sa.Column('server_id', sa.BigInteger(), nullable=True),
    sa.Column('target_user_id', sa.BigInteger(), nullable=True),
    sa.Column('moderator_user_id', sa.BigInteger(), nullable=True),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['moderator_user_id'], ['global_users.discord_id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.ForeignKeyConstraint(['target_user_id'], ['global_users.discord_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('past_nicknames',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('discord_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('server_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['global_users.discord_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temp_voice_log',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=True),
    sa.Column('channel_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_activity',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('server_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=True),
    sa.Column('message_count', sa.Integer(), nullable=False),
    sa.Column('last_message_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['global_users.discord_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'server_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('server_nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('flagged_absent_at', sa.DateTime(), nullable=True),
    sa.Column('is_member', sa.Boolean(), nullable=False),
    sa.Column('server_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['global_users.discord_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'server_id')
    )
    op.create_table('voice_channels',
    sa.Column('server_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('server_id', 'channel_id')
    )
    op.create_table('message_log',
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('log_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('reply_to_message_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['log_id'], ['temp_voice_log.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['global_users.discord_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('attachment_log',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('message_id', sa.BigInteger(), nullable=True),
    sa.Column('storage_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['message_log.message_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('attachment_log')
    op.drop_table('message_log')
    op.drop_table('voice_channels')
    op.drop_table('users')
    op.drop_table('user_activity')
    op.drop_table('temp_voice_log')
    op.drop_table('past_nicknames')
    op.drop_table('moderation_actions')
    op.drop_table('messages')
    op.drop_table('congratulations')
    op.drop_table('birthdays')
    op.drop_table('servers')
    op.drop_table('global_users')
    # ### end Alembic commands ###
